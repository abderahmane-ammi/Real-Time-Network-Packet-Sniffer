import socket
import struct

def eth_frame(data):
    dest_mac, src_mac, proto = struct.unpack('! 6s 6s H', data[:14])
    return {
        "destination_mac": get_mac_addr(dest_mac),
        "source_mac": get_mac_addr(src_mac),
        "protocol": socket.htons(proto),
        "data": data[14:]
    }

def get_mac_addr(bytes_addr):
    return ':'.join(map('{:02x}'.format, bytes_addr)).upper()

def sniff_packets():
    conn = socket.socket(socket.AF_PACKET, socket.SOCK_RAW, socket.ntohs(3))
    print("üîç Listening for packets...\n")
    try:
        while True:
            raw_data, addr = conn.recvfrom(65536)
            packet = eth_frame(raw_data)
            print(f"{packet['source_mac']} ‚ûú {packet['destination_mac']} | Protocol: {packet['protocol']}")
    except KeyboardInterrupt:
        print("\n‚ùå Sniffing stopped by user.")

if __name__ == "__main__":
    sniff_packets()
